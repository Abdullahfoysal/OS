/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapp;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author foysal
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
     ///initialize all 
    //client code
    static int ServerPort=1234;
    static InetAddress ip;
    static Socket s;
    static DataInputStream dis;
    static DataOutputStream dos;
    static String name="foysal";
    static String ServerAddress;

   
    
    public Client(String name,String ServerAddress,int ServerPort ){
       
        this.name=name;
        this.ServerAddress=ServerAddress;
        this.ServerPort=ServerPort;
//        System.out.println("client asse");
    }
    public Client() {
        initComponents();
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msg_area = new javax.swing.JTextField();
        msg_text = new javax.swing.JTextField();
        ClientSentButton = new javax.swing.JButton();
        SentToClient = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ActiveList = new javax.swing.JList<>();
        status = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setText("Client");
        msg_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_areaActionPerformed(evt);
            }
        });

        msg_text.setText("message text");
        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        ClientSentButton.setText("send");
        ClientSentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientSentButtonActionPerformed(evt);
            }
        });

        SentToClient.setText("To");
        SentToClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SentToClientActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(ActiveList);

        status.setText("Active");
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SentToClient, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 181, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ClientSentButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(msg_area)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                    .addComponent(msg_area))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(msg_text, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(SentToClient))
                .addGap(3, 3, 3)
                .addComponent(ClientSentButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
      
        
    }//GEN-LAST:event_msg_textActionPerformed

    private void SentToClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SentToClientActionPerformed
        
    }//GEN-LAST:event_SentToClientActionPerformed

    private void ClientSentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientSentButtonActionPerformed

        try {
            String msout="";
            msout=msg_text.getText().trim();
            msout+="#"+SentToClient.getText().trim();
            dos.writeUTF(msout);
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClientSentButtonActionPerformed

    private void msg_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_areaActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    /**
     * @param args the command line arguments
     */
     
 
    
	
	public static void main(String args[]) throws IOException {
            
            /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
        
       
            
            
		Scanner scn=new Scanner(System.in);
		
		// ip=InetAddress.getByName("localhost");
		// s=new Socket(ip,ServerPort);
                    s=new Socket(ServerAddress,ServerPort);
                 
		
		 dis=new DataInputStream(s.getInputStream());
		 dos=new DataOutputStream(s.getOutputStream());
		
		//send message t
		Thread sendMessage =new Thread(new Runnable () {
			public void run() {
				//while(true) {
				//String msg=scn.nextLine();
				try {
                                        
					dos.writeUTF(name);
					
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			//}
			}
		});
		
		//readMessage thread
		
		Thread readMessage;
        readMessage = new Thread(new Runnable() {
            public void run() {
                while(true) {
                    try {
                        String msg=dis.readUTF();
//                        msg_area.setText("k");
                            msg_area.setText(msg_area.getText().trim()+" "+msg);
                        System.out.println(msg);
                        
                    } catch (IOException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                }
            }
            
        });
		
		sendMessage.start();
		readMessage.start();
	}


    
    //client code end
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Client().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JList<String> ActiveList;
    private javax.swing.JButton ClientSentButton;
    private javax.swing.JTextField SentToClient;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextField msg_area;
    private javax.swing.JTextField msg_text;
    private javax.swing.JTextField status;
    // End of variables declaration//GEN-END:variables
}
